# Tanaka

<!-- [![CI](https://github.com/goodbadwolf/tanaka/actions/workflows/ci.yml/badge.svg)](https://github.com/goodbadwolf/tanaka/actions/workflows/ci.yml) -->

<!-- [![Release](https://img.shields.io/github/v/release/goodbadwolf/tanaka?include_prereleases)](https://github.com/goodbadwolf/tanaka/releases) -->

Tanaka keeps your Firefox browsing **entangled** across every computer you use. Open a tab at work and it’s already there when you get home; close a noisy article on your laptop and it vanishes from your desktop too. Tanaka selectively mirrors _tracked_ windows so your workspace feels like a single, coherent browser—no matter how many machines you run.

> **Why “Tanaka”?**  
> **田中** means “among the fields.” Tanaka lives _between_ your devices, weaving isolated browsers into one continuous field of tabs.

---

## ✨ Features

| Capability                  | Notes                                                                                                                   |
| --------------------------- | ----------------------------------------------------------------------------------------------------------------------- |
| **Live mirroring**          | Tab create / move / close events propagate across devices in ~1 s (baseline poll 5 s, adaptive downwards on activity). |
| **Selective tracking**      | Opt-in per window; leave private or throw-away windows unsynced.                                                        |
| **Session resurrection**    | Browser crashed? Tanaka restores the last good state from another device.                                               |
| **Conflict-free merges**    | Uses Yjs/yrs CRDTs—order-independent, race-free.                                                                        |
| **End-to-end encryption**   | TLS + shared token; data never travels plaintext.                                                                       |
| _(Planned)_ **Scroll sync** | Resume reading at exactly the same pixel offset.                                                                        |

---

## 🛠️ Tech Stack (Personal-Scale)

| Tier            | Technology                                          | Rationale                                            |
| --------------- | --------------------------------------------------- | ---------------------------------------------------- |
| **Extension**   | TypeScript + WebExtension API + Yjs                 | Native API support & fast dev loop.                  |
| **Sync Server** | Rust (**axum** + tokio + yrs)                       | Async, small single binary, excellent performance.   |
| **Persistence** | **SQLite 3 (WAL)** + in-memory read cache (DashMap) | Crash-safe, zero-config file DB, ultra-fast lookups. |
| **OpenAPI UI**  | **utoipa-swagger-ui** (enabled at `/swagger/`)      | FastAPI-style swagger docs out-of-the-box.           |

---

## 🚀 Quick Start

```bash
# 1. Download the latest signed WebExtension (no build tools needed)
$ curl -L -O \
  https://github.com/goodbadwolf/tanaka/releases/latest/download/tanaka.xpi

# 2. Install the add-on
#    Firefox → about:addons → Gear ⚙ → “Install Add-on From File…”
#    Choose tanaka.xpi (Mozilla-signed, unlisted channel)

# 3. Clone & run the sync server
$ git clone https://github.com/goodbadwolf/tanaka.git
$ cd tanaka/server && cargo build --release

$ mkdir -p ~/.config/tanaka
$ cp ../config/example.toml ~/.config/tanaka/tanaka.toml
$ ./target/release/tanaka-server --config ~/.config/tanaka/tanaka.toml
```

After the first install, Firefox will **auto-update** Tanaka whenever a new `.xpi` is uploaded to GitHub Releases—the manifest includes an `update_url` that points to the latest asset, so each machine stays current without rebuilding.

---

## 🏗️ Architecture Overview (text-only)

```
Firefox + TS/Yjs  <──HTTPS──>  Tanaka Server (axum, yrs)
                                   │
                                   └── SQLite (WAL file)
```

- The extension captures tab events, encodes them to Yjs binary deltas, and `POST`s to `/sync`.
- Every **5 s** (adaptive) it `GET`s `/sync?since=<clock>` for new deltas.
- The server merges with `yrs`, serves OpenAPI docs at `/swagger/`, keeps hot data in `DashMap`, and writes to SQLite WAL every `flush_secs`.

---

## 🗺️ Roadmap

- **v0.1**  MVP – live tab mirroring via polling (SQLite, Swagger, CRDTs).
- **v0.2**  Scroll-position sync & persistent extension signing.
- **v0.3**  Additional optimizations for sub-second latency.
- **v1.0**  Android support, pre-built binaries for arm64, auto-update channel.

---

## 🤝 Contributing (personal project)

Open issues or PRs if you spot something odd. Run `cargo fmt && pnpm run lint` before submitting.

---

## 📄 License

Tanaka is released under the [MIT License](LICENSE).

---

## 🙏 Acknowledgements

- Inspired by Firefox Sync and academic work on **CRDTs**.
- Uses open-source powerhouses: axum, tokio, Yjs/yrs, SQLite, utoipa.
