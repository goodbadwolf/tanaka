@use 'sass:map';
@use 'sass:color';
@use 'sass:meta';
@use 'variables' as *;

// =====================================================================
// Practical Mixins - Battle-tested utilities
// =====================================================================

// Layout
@mixin flex($direction: row, $align: stretch, $justify: flex-start, $gap: null) {
  display: flex;
  flex-direction: $direction;
  align-items: $align;
  justify-content: $justify;
  @if $gap {
    gap: $gap;
  }
}

@mixin flex-center {
  @include flex($align: center, $justify: center);
}

// Responsive
@mixin respond-to($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (min-width: map.get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Breakpoint '#{$breakpoint}' not found";
  }
}

// Interaction states
@mixin hover-style {
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      @content;
    }
  }
}

@mixin focus-style {
  &:focus-visible {
    outline: 2px solid var(--primary);
    outline-offset: 2px;
    @content;
  }
}

@mixin touch-feedback {
  @media (pointer: coarse) {
    transition: transform map.get($transitions, fast);
    &:active {
      transform: scale(0.96);
    }
  }
}

// Typography
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Visual effects
@mixin gradient-text($gradient-var: --gradient-primary) {
  background: var($gradient-var);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

@mixin glass($blur: 10px, $opacity: 0.1) {
  background: rgba(255, 255, 255, $opacity);
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

// Utility functions
@function spacing($key) {
  @return map.get($spacing-scale, $key);
}

@function radius($key) {
  @return map.get($radius-scale, $key);
}

@function z($key) {
  @return map.get($z-layers, $key);
}

@function font-size($key) {
  @return map.get($font-sizes, $key);
}

@function font-weight($key) {
  @return map.get($font-weights, $key);
}

// Color manipulation
@function tint($color, $percentage) {
  @return color.mix(white, $color, $percentage);
}

@function shade($color, $percentage) {
  @return color.mix(black, $color, $percentage);
}

@function alpha($color, $alpha) {
  @return color.change($color, $alpha: $alpha);
}
